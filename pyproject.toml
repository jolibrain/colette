[project]
name = "colette"
version = "0.1.0"
authors = [{ name = "Colette Team", email = "contact@jolibrain.com" }]
license = "Apache-2.0"
readme = "README.md"
description = "Colette is an open-source local RAG for your documents"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.10"
dependencies = [
    "click",
    "chromadb",
    "fastapi",
    "pydantic",
    "torch>=2.6.0",
    "uvicorn",
    "vllm",
    "bitsandbytes",
    "qwen_vl_utils",
    "pypandoc_binary",
    "python-doctr",
    "ujson",
    "GitPython",
    "faiss-gpu-cu12",
    "transformers>=4.50.0",
    "flash-attn>=2.7.4.post1",
    "diffusers",
    "colpali-engine",
]

[project.optional-dependencies]
dev = ["pytest>=8.3.5", "pytest-asyncio>=0.25.3", "ruff", "pre-commit"]
trag = [
    "huggingface_hub[cli]",
    "rank_bm25",
    "unstructured[docx]",
    "unstructured[pptx]",
    "unstructured[xlsx]",
    "unstructured[pdf]",
    "unstructured-inference",
    "langchain-core",
    "langchain-community",
    "langchain-chroma",
    "langchain-huggingface",
    "langchain-openai",
    "langchain-ollama",
    "langchain-unstructured",
    "llama-cpp-python==0.3.1",
    "pymupdf",
]

[project.scripts]
colette_cli = "colette.colette_cli:cli"

[build-system]
requires = [
    "setuptools>=61.0",
    "ninja",
    "packaging",
    "setuptools-scm>=8.0",
    "torch >= 2.6.0",
    "wheel",
    "jinja2",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort (imports)
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    #"C90",  # mccabe complexity
]

[tool.ruff.lint.per-file-ignores]
"src/colette/apidata.py" = ["E501"]
"src/colette/backends/hf/query_rephraser.py" = ["E501"]
"src/colette/backends/coldb/collection.py" = ["E501"]
"src/colette/backends/coldb/indexing/collection_encoder.py" = ["E501"]
"src/colette/backends/coldb/indexing/collection_indexer.py" = ["E501"]
"src/colette/backends/coldb/infra/config/base_config.py" = ["E501"]
"src/colette/backends/coldb/infra/launcher.py" = ["E501"]
"src/colette/backends/coldb/infra/run.py" = ["E501"]
"src/colette/backends/coldb/utility/utils/save_metadata.py" = ["E501"]
"src/colette/backends/coldb/modeling/checkpoint.py" = ["E501"]
"src/colette/ui/utils/namesgenerator.py" = ["E501"]
"src/colette/ui/utils/config.py" = ["E501"]
"src/colette/ui/utils/api.py" = ["E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 120

[tool.uv]
default-groups = []
no-build-isolation-package = ["flash-attn"]

[tool.uv.sources]
colpali-engine = { git = "https://github.com/illuin-tech/colpali" }

[tool.pyright]
venvPath = "."
venv = ".venv"
